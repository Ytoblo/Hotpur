/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

apply plugin: "com.palantir.git-version"

version = 'dev-SNAPSHOT'

def details = versionDetails()
def branchName = details.branchName
def distance = details.commitDistance
def hash = details.gitHash
if(System.getenv("GITHUB_ACTIONS") == "true") {
    println("Github Actions detected, filling branch information")
    branchName = System.getenv("GITHUB_REF").substring("refs/heads/".length())
}
else if(System.getenv("JENKINS_URL")) {
    println("Jenkins Environment detected, filling branch information")
    branchName = System.getenv("GIT_BRANCH").substring("origin/".length())
}
ext.implementationVersion = "git-Hotpur-${branchName}_${distance}_${hash}"
println("Git Describe: ${ext.implementationVersion}")

allprojects {
    group = 'com.ishland.hotpur'
}

configure (subprojects - project(":fabric-loader")) {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    version = project.project_version

    repositories {
        mavenLocal()
        maven {
            url = uri('https://repo.aikar.co/content/groups/aikar/')
        }

        maven {
            url = uri('https://nexus.velocitypowered.com/repository/velocity-artifacts-snapshots/')
        }

        maven {
            url = uri('https://repo.maven.apache.org/maven2')
        }

        maven {
            url = uri('https://hub.spigotmc.org/nexus/content/groups/public/')
        }

        maven {
            url = uri('https://oss.sonatype.org/content/groups/public/')
        }

        maven {
            url = uri('https://libraries.minecraft.net')
        }
    }

    dependencies {
        testImplementation 'junit:junit:4.13.1'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnit()
        maxParallelForks = 1
        testLogging {
            events "failed", "standard_out", "standard_error"
            showStackTraces true
            exceptionFormat "full"
        }
        workingDir = project.buildDir
    }
}
